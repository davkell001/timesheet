//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MBTimeSheetWebApp.ProjectsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="ProjectsService", ConfigurationName="ProjectsService.ProjectsServiceSoap")]
    public interface ProjectsServiceSoap {
        
        // CODEGEN: Generating message contract since the operation AddProject is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/AddProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MBTimeSheetWebApp.ProjectsService.AddProjectResponse AddProject(MBTimeSheetWebApp.ProjectsService.AddProjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/AddProject", ReplyAction="*")]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.AddProjectResponse> AddProjectAsync(MBTimeSheetWebApp.ProjectsService.AddProjectRequest request);
        
        // CODEGEN: Generating message contract since the operation UpdateProject is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/UpdateProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MBTimeSheetWebApp.ProjectsService.UpdateProjectResponse UpdateProject(MBTimeSheetWebApp.ProjectsService.UpdateProjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/UpdateProject", ReplyAction="*")]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.UpdateProjectResponse> UpdateProjectAsync(MBTimeSheetWebApp.ProjectsService.UpdateProjectRequest request);
        
        // CODEGEN: Generating message contract since the operation DeleteProject is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/DeleteProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MBTimeSheetWebApp.ProjectsService.DeleteProjectResponse DeleteProject(MBTimeSheetWebApp.ProjectsService.DeleteProjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/DeleteProject", ReplyAction="*")]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.DeleteProjectResponse> DeleteProjectAsync(MBTimeSheetWebApp.ProjectsService.DeleteProjectRequest request);
        
        // CODEGEN: Generating message contract since the operation GetProjectList is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/GetProjectList", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MBTimeSheetWebApp.ProjectsService.GetProjectListResponse GetProjectList(MBTimeSheetWebApp.ProjectsService.GetProjectListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/GetProjectList", ReplyAction="*")]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.GetProjectListResponse> GetProjectListAsync(MBTimeSheetWebApp.ProjectsService.GetProjectListRequest request);
        
        // CODEGEN: Generating message contract since the operation GetProject is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/GetProject", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        MBTimeSheetWebApp.ProjectsService.GetProjectResponse GetProject(MBTimeSheetWebApp.ProjectsService.GetProjectRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="ProjectsService/GetProject", ReplyAction="*")]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.GetProjectResponse> GetProjectAsync(MBTimeSheetWebApp.ProjectsService.GetProjectRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sap.com/SBO/DIS")]
    public partial class MsgHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string sessionIDField;
        
        private MsgHeaderServiceName serviceNameField;
        
        private bool serviceNameFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
                this.RaisePropertyChanged("SessionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public MsgHeaderServiceName ServiceName {
            get {
                return this.serviceNameField;
            }
            set {
                this.serviceNameField = value;
                this.RaisePropertyChanged("ServiceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ServiceNameSpecified {
            get {
                return this.serviceNameFieldSpecified;
            }
            set {
                this.serviceNameFieldSpecified = value;
                this.RaisePropertyChanged("ServiceNameSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sap.com/SBO/DIS")]
    public enum MsgHeaderServiceName {
        
        /// <remarks/>
        ProjectsService,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="ProjectsService")]
    public partial class AddProject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Project projectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.sap.com/SBO/DIS", Order=0)]
        public Project Project {
            get {
                return this.projectField;
            }
            set {
                this.projectField = value;
                this.RaisePropertyChanged("Project");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sap.com/SBO/DIS")]
    public partial class Project : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string nameField;
        
        private System.DateTime validFromField;
        
        private bool validFromFieldSpecified;
        
        private System.DateTime validToField;
        
        private bool validToFieldSpecified;
        
        private ProjectActive activeField;
        
        private bool activeFieldSpecified;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime ValidFrom {
            get {
                return this.validFromField;
            }
            set {
                this.validFromField = value;
                this.RaisePropertyChanged("ValidFrom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidFromSpecified {
            get {
                return this.validFromFieldSpecified;
            }
            set {
                this.validFromFieldSpecified = value;
                this.RaisePropertyChanged("ValidFromSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime ValidTo {
            get {
                return this.validToField;
            }
            set {
                this.validToField = value;
                this.RaisePropertyChanged("ValidTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValidToSpecified {
            get {
                return this.validToFieldSpecified;
            }
            set {
                this.validToFieldSpecified = value;
                this.RaisePropertyChanged("ValidToSpecified");
            }
        }
        
        /// <remarks/>
        public ProjectActive Active {
            get {
                return this.activeField;
            }
            set {
                this.activeField = value;
                this.RaisePropertyChanged("Active");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActiveSpecified {
            get {
                return this.activeFieldSpecified;
            }
            set {
                this.activeFieldSpecified = value;
                this.RaisePropertyChanged("ActiveSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sap.com/SBO/DIS")]
    public enum ProjectActive {
        
        /// <remarks/>
        tNO,
        
        /// <remarks/>
        tYES,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sap.com/SBO/DIS")]
    public partial class ProjectParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.sap.com/SBO/DIS")]
        public MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="ProjectsService", Order=0)]
        public MBTimeSheetWebApp.ProjectsService.AddProject AddProject;
        
        public AddProjectRequest() {
        }
        
        public AddProjectRequest(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.AddProject AddProject) {
            this.MsgHeader = MsgHeader;
            this.AddProject = AddProject;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddProjectResponse", WrapperNamespace="http://www.sap.com/SBO/DIS", IsWrapped=true)]
    public partial class AddProjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.sap.com/SBO/DIS", Order=0)]
        public MBTimeSheetWebApp.ProjectsService.ProjectParams ProjectParams;
        
        public AddProjectResponse() {
        }
        
        public AddProjectResponse(MBTimeSheetWebApp.ProjectsService.ProjectParams ProjectParams) {
            this.ProjectParams = ProjectParams;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="ProjectsService")]
    public partial class UpdateProject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Project projectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.sap.com/SBO/DIS", Order=0)]
        public Project Project {
            get {
                return this.projectField;
            }
            set {
                this.projectField = value;
                this.RaisePropertyChanged("Project");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UpdateProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.sap.com/SBO/DIS")]
        public MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="ProjectsService", Order=0)]
        public MBTimeSheetWebApp.ProjectsService.UpdateProject UpdateProject;
        
        public UpdateProjectRequest() {
        }
        
        public UpdateProjectRequest(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.UpdateProject UpdateProject) {
            this.MsgHeader = MsgHeader;
            this.UpdateProject = UpdateProject;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UpdateProjectResponse", WrapperNamespace="http://www.sap.com/SBO/DIS", IsWrapped=true)]
    public partial class UpdateProjectResponse {
        
        public UpdateProjectResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="ProjectsService")]
    public partial class DeleteProject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ProjectParams projectParamsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.sap.com/SBO/DIS", Order=0)]
        public ProjectParams ProjectParams {
            get {
                return this.projectParamsField;
            }
            set {
                this.projectParamsField = value;
                this.RaisePropertyChanged("ProjectParams");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DeleteProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.sap.com/SBO/DIS")]
        public MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="ProjectsService", Order=0)]
        public MBTimeSheetWebApp.ProjectsService.DeleteProject DeleteProject;
        
        public DeleteProjectRequest() {
        }
        
        public DeleteProjectRequest(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.DeleteProject DeleteProject) {
            this.MsgHeader = MsgHeader;
            this.DeleteProject = DeleteProject;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="DeleteProjectResponse", WrapperNamespace="http://www.sap.com/SBO/DIS", IsWrapped=true)]
    public partial class DeleteProjectResponse {
        
        public DeleteProjectResponse() {
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="ProjectsService")]
    public partial class GetProjectList : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://www.sap.com/SBO/DIS")]
    public partial class ProjectsParamsProjectParams : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string codeField;
        
        private string nameField;
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProjectListRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.sap.com/SBO/DIS")]
        public MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="ProjectsService", Order=0)]
        public MBTimeSheetWebApp.ProjectsService.GetProjectList GetProjectList;
        
        public GetProjectListRequest() {
        }
        
        public GetProjectListRequest(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.GetProjectList GetProjectList) {
            this.MsgHeader = MsgHeader;
            this.GetProjectList = GetProjectList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectListResponse", WrapperNamespace="http://www.sap.com/SBO/DIS", IsWrapped=true)]
    public partial class GetProjectListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.sap.com/SBO/DIS", Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ProjectParams", IsNullable=false)]
        public MBTimeSheetWebApp.ProjectsService.ProjectsParamsProjectParams[] ProjectsParams;
        
        public GetProjectListResponse() {
        }
        
        public GetProjectListResponse(MBTimeSheetWebApp.ProjectsService.ProjectsParamsProjectParams[] ProjectsParams) {
            this.ProjectsParams = ProjectsParams;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="ProjectsService")]
    public partial class GetProject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ProjectParams projectParamsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.sap.com/SBO/DIS", Order=0)]
        public ProjectParams ProjectParams {
            get {
                return this.projectParamsField;
            }
            set {
                this.projectParamsField = value;
                this.RaisePropertyChanged("ProjectParams");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetProjectRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://www.sap.com/SBO/DIS")]
        public MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="ProjectsService", Order=0)]
        public MBTimeSheetWebApp.ProjectsService.GetProject GetProject;
        
        public GetProjectRequest() {
        }
        
        public GetProjectRequest(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.GetProject GetProject) {
            this.MsgHeader = MsgHeader;
            this.GetProject = GetProject;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetProjectResponse", WrapperNamespace="http://www.sap.com/SBO/DIS", IsWrapped=true)]
    public partial class GetProjectResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.sap.com/SBO/DIS", Order=0)]
        public MBTimeSheetWebApp.ProjectsService.Project Project;
        
        public GetProjectResponse() {
        }
        
        public GetProjectResponse(MBTimeSheetWebApp.ProjectsService.Project Project) {
            this.Project = Project;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ProjectsServiceSoapChannel : MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProjectsServiceSoapClient : System.ServiceModel.ClientBase<MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap>, MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap {
        
        public ProjectsServiceSoapClient() {
        }
        
        public ProjectsServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProjectsServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectsServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProjectsServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MBTimeSheetWebApp.ProjectsService.AddProjectResponse MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.AddProject(MBTimeSheetWebApp.ProjectsService.AddProjectRequest request) {
            return base.Channel.AddProject(request);
        }
        
        public MBTimeSheetWebApp.ProjectsService.ProjectParams AddProject(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.AddProject AddProject1) {
            MBTimeSheetWebApp.ProjectsService.AddProjectRequest inValue = new MBTimeSheetWebApp.ProjectsService.AddProjectRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.AddProject = AddProject1;
            MBTimeSheetWebApp.ProjectsService.AddProjectResponse retVal = ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).AddProject(inValue);
            return retVal.ProjectParams;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.AddProjectResponse> MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.AddProjectAsync(MBTimeSheetWebApp.ProjectsService.AddProjectRequest request) {
            return base.Channel.AddProjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.AddProjectResponse> AddProjectAsync(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.AddProject AddProject) {
            MBTimeSheetWebApp.ProjectsService.AddProjectRequest inValue = new MBTimeSheetWebApp.ProjectsService.AddProjectRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.AddProject = AddProject;
            return ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).AddProjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MBTimeSheetWebApp.ProjectsService.UpdateProjectResponse MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.UpdateProject(MBTimeSheetWebApp.ProjectsService.UpdateProjectRequest request) {
            return base.Channel.UpdateProject(request);
        }
        
        public void UpdateProject(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.UpdateProject UpdateProject1) {
            MBTimeSheetWebApp.ProjectsService.UpdateProjectRequest inValue = new MBTimeSheetWebApp.ProjectsService.UpdateProjectRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.UpdateProject = UpdateProject1;
            MBTimeSheetWebApp.ProjectsService.UpdateProjectResponse retVal = ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).UpdateProject(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.UpdateProjectResponse> MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.UpdateProjectAsync(MBTimeSheetWebApp.ProjectsService.UpdateProjectRequest request) {
            return base.Channel.UpdateProjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.UpdateProjectResponse> UpdateProjectAsync(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.UpdateProject UpdateProject) {
            MBTimeSheetWebApp.ProjectsService.UpdateProjectRequest inValue = new MBTimeSheetWebApp.ProjectsService.UpdateProjectRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.UpdateProject = UpdateProject;
            return ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).UpdateProjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MBTimeSheetWebApp.ProjectsService.DeleteProjectResponse MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.DeleteProject(MBTimeSheetWebApp.ProjectsService.DeleteProjectRequest request) {
            return base.Channel.DeleteProject(request);
        }
        
        public void DeleteProject(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.DeleteProject DeleteProject1) {
            MBTimeSheetWebApp.ProjectsService.DeleteProjectRequest inValue = new MBTimeSheetWebApp.ProjectsService.DeleteProjectRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.DeleteProject = DeleteProject1;
            MBTimeSheetWebApp.ProjectsService.DeleteProjectResponse retVal = ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).DeleteProject(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.DeleteProjectResponse> MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.DeleteProjectAsync(MBTimeSheetWebApp.ProjectsService.DeleteProjectRequest request) {
            return base.Channel.DeleteProjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.DeleteProjectResponse> DeleteProjectAsync(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.DeleteProject DeleteProject) {
            MBTimeSheetWebApp.ProjectsService.DeleteProjectRequest inValue = new MBTimeSheetWebApp.ProjectsService.DeleteProjectRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.DeleteProject = DeleteProject;
            return ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).DeleteProjectAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MBTimeSheetWebApp.ProjectsService.GetProjectListResponse MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.GetProjectList(MBTimeSheetWebApp.ProjectsService.GetProjectListRequest request) {
            return base.Channel.GetProjectList(request);
        }
        
        public MBTimeSheetWebApp.ProjectsService.ProjectsParamsProjectParams[] GetProjectList(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.GetProjectList GetProjectList1) {
            MBTimeSheetWebApp.ProjectsService.GetProjectListRequest inValue = new MBTimeSheetWebApp.ProjectsService.GetProjectListRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.GetProjectList = GetProjectList1;
            MBTimeSheetWebApp.ProjectsService.GetProjectListResponse retVal = ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).GetProjectList(inValue);
            return retVal.ProjectsParams;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.GetProjectListResponse> MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.GetProjectListAsync(MBTimeSheetWebApp.ProjectsService.GetProjectListRequest request) {
            return base.Channel.GetProjectListAsync(request);
        }
        
        public System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.GetProjectListResponse> GetProjectListAsync(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.GetProjectList GetProjectList) {
            MBTimeSheetWebApp.ProjectsService.GetProjectListRequest inValue = new MBTimeSheetWebApp.ProjectsService.GetProjectListRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.GetProjectList = GetProjectList;
            return ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).GetProjectListAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        MBTimeSheetWebApp.ProjectsService.GetProjectResponse MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.GetProject(MBTimeSheetWebApp.ProjectsService.GetProjectRequest request) {
            return base.Channel.GetProject(request);
        }
        
        public MBTimeSheetWebApp.ProjectsService.Project GetProject(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.GetProject GetProject1) {
            MBTimeSheetWebApp.ProjectsService.GetProjectRequest inValue = new MBTimeSheetWebApp.ProjectsService.GetProjectRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.GetProject = GetProject1;
            MBTimeSheetWebApp.ProjectsService.GetProjectResponse retVal = ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).GetProject(inValue);
            return retVal.Project;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.GetProjectResponse> MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap.GetProjectAsync(MBTimeSheetWebApp.ProjectsService.GetProjectRequest request) {
            return base.Channel.GetProjectAsync(request);
        }
        
        public System.Threading.Tasks.Task<MBTimeSheetWebApp.ProjectsService.GetProjectResponse> GetProjectAsync(MBTimeSheetWebApp.ProjectsService.MsgHeader MsgHeader, MBTimeSheetWebApp.ProjectsService.GetProject GetProject) {
            MBTimeSheetWebApp.ProjectsService.GetProjectRequest inValue = new MBTimeSheetWebApp.ProjectsService.GetProjectRequest();
            inValue.MsgHeader = MsgHeader;
            inValue.GetProject = GetProject;
            return ((MBTimeSheetWebApp.ProjectsService.ProjectsServiceSoap)(this)).GetProjectAsync(inValue);
        }
    }
}
